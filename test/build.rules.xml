<?xml version="1.0" encoding="UTF-8"?>
<project name="harmony-rules-test" default="help">
    <property name="reports.dir" value="tmp" />
    <property name="device.out.dir" value="/data/data/" />
    <property name="monkey.numberevents" value="5000" />
    <property name="monkey.seed" value="0" />

    <!-- generic setup -->
    <target name="-setup" depends="android_rules.-setup">
        <property name="junit.report.file" value="${project.app.package}.junit-report.xml" />
    </target>

    <target name="test-report" depends="-setup">
        <echo>Downloading XML test report...</echo>
        <mkdir dir="${reports.dir}"/>
        <exec executable="${sdk.dir}/platform-tools/adb" failonerror="true">
            <arg value="pull" />
            <arg value="${junit.report.dir}${junit.report.file}" />
            <arg value="${reports.dir}/junit-report.xml" />
           </exec>

           <fail message="Tests failed!!!">
             <condition>
                 <contains string="${tests.output}" substring="FAILURES" />
             </condition>
        </fail>
    </target>

    <target name="test-all" depends="emma,clean,debug,install,test,test-report,monkey"/>

    <target name="monkey-disable" depends="-setup">
        <property name="monkey.enabled" value="false" />
    </target>

    <target name="monkey" depends="-setup">
        <if condition="${monkey.enabled}">
            <then>
                <echo level="info">Launch monkey on ${tested.manifest.package}"</echo>
                <exec executable="${sdk.dir}/platform-tools/adb" failonerror="true">
                    <arg value="shell"/>
                    <arg value="monkey"/>
                    <arg value="-p"/>
                    <arg value="${tested.manifest.package}"/>
                    <arg value="-v"/>
                    <arg value="${monkey.numberevents}"/>
                    <arg value="-s"/>
                    <arg value="${monkey.seed}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="test"
            depends="-test-project-check"
            description="Runs tests from the package defined in test.package property">

        <property name="test.runner" value="android.test.InstrumentationTestRunner" />

        <if condition="${project.is.test}">
            <then>
                <property name="tested.project.absolute.dir" location="${tested.project.dir}" />

                <!-- Application package of the tested project extracted from its manifest file -->
                <xpath input="${tested.project.absolute.dir}/AndroidManifest.xml"
                        expression="/manifest/@package" output="tested.project.app.package" />

                <if condition="${emma.enabled}">
                    <then>
                        <getprojectpaths projectPath="${tested.project.absolute.dir}"
                                binOut="tested.project.out.absolute.dir"
                                srcOut="tested.project.source.absolute.dir" />

                        <getlibpath projectPath="${tested.project.absolute.dir}"
                                libraryFolderPathOut="tested.project.lib.source.path"
                                leaf="@{source.dir}" />

                    </then>
                </if>

                <property name="junit.report.dir" value="${device.out.dir}${tested.project.app.package}/" />

            </then>
            <else>
                <!-- this is a test app, the tested package is the app's own package -->
                <property name="tested.project.app.package" value="${project.app.package}" />

                <if condition="${emma.enabled}">
                    <then>
                        <property name="tested.project.out.absolute.dir" value="${out.absolute.dir}" />
                        <property name="tested.project.source.absolute.dir" value="${source.absolute.dir}" />

                        <getlibpath
                                libraryFolderPathOut="tested.project.lib.source.path"
                                leaf="@{source.dir}" />

                    </then>
                </if>

            </else>
        </if>

        <if condition="${emma.enabled}">
            <then>
                <echo>Running tests with emma...</echo>

                <property name="emma.dump.file" value="${device.out.dir}${tested.project.app.package}/coverage.ec" />

                <run-tests-helper-harmony emma.enabled="true">
                    <extra-instrument-args>
                        <arg value="-e" />
                        <arg value="coverageFile"/>
                        <arg value="${emma.dump.file}"/>
                        <arg value="-e"/>
                        <arg value="reportDir"/>
                        <arg value="${junit.report.dir}"/>
                        <arg value="-e"/>
                        <arg value="reportFile"/>
                        <arg value="${junit.report.file}"/>
                    </extra-instrument-args>
                </run-tests-helper-harmony>

                <echo level="info">Setting permission to download the coverage file...</echo>

                <exec executable="${adb}" failonerror="true">
                    <arg line="${adb.device.arg}" />
                    <arg value="shell" />
                    <arg value="run-as" />
                    <arg value="${tested.project.app.package}" />
                    <arg value="chmod" />
                    <arg value="644" />
                    <arg value="${emma.dump.file}" />
                </exec>

                <echo level="info">Downloading coverage file into project directory...</echo>

                <exec executable="${adb}" failonerror="true">
                    <arg line="${adb.device.arg}" />
                    <arg value="pull" />
                    <arg value="${emma.dump.file}" />
                    <arg path="${out.absolute.dir}/coverage.ec" />
                </exec>

                <pathconvert property="tested.project.lib.source.path.value" refid="tested.project.lib.source.path">
                    <firstmatchmapper>
                        <regexpmapper from='^([^ ]*)( .*)$$' to='"\1\2"'/>
                        <identitymapper/>
                    </firstmatchmapper>
                </pathconvert>

                <echo level="info">Extracting coverage report...</echo>

                <emma>
                    <property name="report.html.out.encoding" value="UTF-8" />
                    <report sourcepath="${tested.project.source.absolute.dir}:${tested.project.lib.source.path.value}"
                            verbosity="${verbosity}">
                        <!-- TODO: report.dir or something like should be introduced if necessary -->
                        <infileset file="${out.absolute.dir}/coverage.ec" />
                        <infileset file="${tested.project.out.absolute.dir}/coverage.em" />
                        <!-- TODO: reports in other, indicated by user formats -->
                        <html outfile="${out.absolute.dir}/coverage.html" />
                        <txt outfile="${out.absolute.dir}/coverage.txt" />
                        <xml outfile="${out.absolute.dir}/coverage.xml"
                            columns="name,class,method,block,line"
                              sort="+line, +name"/>
                   </report>
                </emma>

                <echo level="info">Cleaning up temporary files...</echo>

                <delete file="${out.absolute.dir}/coverage.ec" />
                <delete file="${tested.project.out.absolute.dir}/coverage.em" />
                <exec executable="${adb}" failonerror="true">
                    <arg line="${adb.device.arg}" />
                    <arg value="shell" />
                    <arg value="rm" />
                    <arg value="${emma.dump.file}" />
                </exec>

                <echo level="info">Saving the coverage reports in ${out.absolute.dir}</echo>
            </then>
            <else>
                <run-tests-helper-harmony>
                    <extra-instrument-args>
                        <arg value="-e"/>
                        <arg value="reportDir"/>
                        <arg value="${junit.report.dir}"/>
                        <arg value="-e"/>
                        <arg value="reportFile"/>
                        <arg value="${junit.report.file}"/>
                    </extra-instrument-args>
                </run-tests-helper-harmony>
            </else>
        </if>
    </target>

    <!-- Create new run-tests-helper to add failure capability for CI-->
    <macrodef name="run-tests-helper-harmony">
        <attribute name="emma.enabled" default="false" />
        <element name="extra-instrument-args" optional="yes" />
        <sequential>
            <echo level="info">Running tests...</echo>
            <exec executable="${adb}" failonerror="true">
                <arg line="${adb.device.arg}" />
                <arg value="shell" />
                <arg value="am" />
                <arg value="instrument" />
                <arg value="-w" />
                <arg value="-e" />
                <arg value="coverage" />
                <arg value="@{emma.enabled}" />
                <extra-instrument-args />
                <arg value="${project.app.package}/${test.runner}" />
                <redirector outputproperty="tests.output" alwayslog="true" />
            </exec>
        </sequential>
    </macrodef>

</project>